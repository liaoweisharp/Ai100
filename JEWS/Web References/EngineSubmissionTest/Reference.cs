//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace JEWS.EngineSubmissionTest {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SubmissionWebServiceHttpBinding", Namespace="http://webservice.acepherics.com")]
    public partial class SubmissionWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCorreceNumByTestResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitOnlineImproveTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitOnlineTestGradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitOfflineQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuestionCorrectFlagByTestResultIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback editTestResultQuestionScoreOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTestResultQuestionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback saveTesterAnswersResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateTestResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitOnlineQuestionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitOnlineImproveTestGradeOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelSaveTestResutlOperationCompleted;
        
        private System.Threading.SendOrPostCallback getQuestionCorrectFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitTesterAnswersResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback submitOnlineTestOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SubmissionWebService() {
            this.Url = global::JEWS.Properties.Settings.Default.JEWS_EngineSubmissionTest_SubmissionWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getCorreceNumByTestResultCompletedEventHandler getCorreceNumByTestResultCompleted;
        
        /// <remarks/>
        public event submitOnlineImproveTestCompletedEventHandler submitOnlineImproveTestCompleted;
        
        /// <remarks/>
        public event submitOnlineTestGradeCompletedEventHandler submitOnlineTestGradeCompleted;
        
        /// <remarks/>
        public event submitOfflineQuestionsCompletedEventHandler submitOfflineQuestionsCompleted;
        
        /// <remarks/>
        public event getQuestionCorrectFlagByTestResultIdCompletedEventHandler getQuestionCorrectFlagByTestResultIdCompleted;
        
        /// <remarks/>
        public event editTestResultQuestionScoreCompletedEventHandler editTestResultQuestionScoreCompleted;
        
        /// <remarks/>
        public event getTestResultQuestionListCompletedEventHandler getTestResultQuestionListCompleted;
        
        /// <remarks/>
        public event saveTesterAnswersResultCompletedEventHandler saveTesterAnswersResultCompleted;
        
        /// <remarks/>
        public event updateTestResultCompletedEventHandler updateTestResultCompleted;
        
        /// <remarks/>
        public event submitOnlineQuestionsCompletedEventHandler submitOnlineQuestionsCompleted;
        
        /// <remarks/>
        public event submitOnlineImproveTestGradeCompletedEventHandler submitOnlineImproveTestGradeCompleted;
        
        /// <remarks/>
        public event cancelSaveTestResutlCompletedEventHandler cancelSaveTestResutlCompleted;
        
        /// <remarks/>
        public event getQuestionCorrectFlagCompletedEventHandler getQuestionCorrectFlagCompleted;
        
        /// <remarks/>
        public event submitTesterAnswersResultCompletedEventHandler submitTesterAnswersResultCompleted;
        
        /// <remarks/>
        public event submitOnlineTestCompletedEventHandler submitOnlineTestCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string getCorreceNumByTestResult([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in2) {
            object[] results = this.Invoke("getCorreceNumByTestResult", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCorreceNumByTestResultAsync(string in0, string in1, UserExtend in2) {
            this.getCorreceNumByTestResultAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void getCorreceNumByTestResultAsync(string in0, string in1, UserExtend in2, object userState) {
            if ((this.getCorreceNumByTestResultOperationCompleted == null)) {
                this.getCorreceNumByTestResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCorreceNumByTestResultOperationCompleted);
            }
            this.InvokeAsync("getCorreceNumByTestResult", new object[] {
                        in0,
                        in1,
                        in2}, this.getCorreceNumByTestResultOperationCompleted, userState);
        }
        
        private void OngetCorreceNumByTestResultOperationCompleted(object arg) {
            if ((this.getCorreceNumByTestResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCorreceNumByTestResultCompleted(this, new getCorreceNumByTestResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string submitOnlineImproveTest([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TestResultWrapper in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in3) {
            object[] results = this.Invoke("submitOnlineImproveTest", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submitOnlineImproveTestAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, System.Nullable<bool> in2, UserExtend in3) {
            this.submitOnlineImproveTestAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void submitOnlineImproveTestAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, System.Nullable<bool> in2, UserExtend in3, object userState) {
            if ((this.submitOnlineImproveTestOperationCompleted == null)) {
                this.submitOnlineImproveTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitOnlineImproveTestOperationCompleted);
            }
            this.InvokeAsync("submitOnlineImproveTest", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.submitOnlineImproveTestOperationCompleted, userState);
        }
        
        private void OnsubmitOnlineImproveTestOperationCompleted(object arg) {
            if ((this.submitOnlineImproveTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitOnlineImproveTestCompleted(this, new submitOnlineImproveTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TestResultWrapper submitOnlineTestGrade([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TestResultWrapper in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in2) {
            object[] results = this.Invoke("submitOnlineTestGrade", new object[] {
                        in0,
                        in1,
                        in2});
            return ((TestResultWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void submitOnlineTestGradeAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, UserExtend in2) {
            this.submitOnlineTestGradeAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void submitOnlineTestGradeAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, UserExtend in2, object userState) {
            if ((this.submitOnlineTestGradeOperationCompleted == null)) {
                this.submitOnlineTestGradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitOnlineTestGradeOperationCompleted);
            }
            this.InvokeAsync("submitOnlineTestGrade", new object[] {
                        in0,
                        in1,
                        in2}, this.submitOnlineTestGradeOperationCompleted, userState);
        }
        
        private void OnsubmitOnlineTestGradeOperationCompleted(object arg) {
            if ((this.submitOnlineTestGradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitOnlineTestGradeCompleted(this, new submitOnlineTestGradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")]
        public TestResultQuestionWrapper[] submitOfflineQuestions([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in2) {
            object[] results = this.Invoke("submitOfflineQuestions", new object[] {
                        in0,
                        in1,
                        in2});
            return ((TestResultQuestionWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void submitOfflineQuestionsAsync(TestResultQuestionWrapper[] in0, System.Nullable<bool> in1, UserExtend in2) {
            this.submitOfflineQuestionsAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void submitOfflineQuestionsAsync(TestResultQuestionWrapper[] in0, System.Nullable<bool> in1, UserExtend in2, object userState) {
            if ((this.submitOfflineQuestionsOperationCompleted == null)) {
                this.submitOfflineQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitOfflineQuestionsOperationCompleted);
            }
            this.InvokeAsync("submitOfflineQuestions", new object[] {
                        in0,
                        in1,
                        in2}, this.submitOfflineQuestionsOperationCompleted, userState);
        }
        
        private void OnsubmitOfflineQuestionsOperationCompleted(object arg) {
            if ((this.submitOfflineQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitOfflineQuestionsCompleted(this, new submitOfflineQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")]
        public TestResultQuestionWrapper[] getQuestionCorrectFlagByTestResultId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> in3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in4) {
            object[] results = this.Invoke("getQuestionCorrectFlagByTestResultId", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4});
            return ((TestResultQuestionWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void getQuestionCorrectFlagByTestResultIdAsync(string in0, System.Nullable<bool> in1, System.Nullable<bool> in2, System.Nullable<int> in3, UserExtend in4) {
            this.getQuestionCorrectFlagByTestResultIdAsync(in0, in1, in2, in3, in4, null);
        }
        
        /// <remarks/>
        public void getQuestionCorrectFlagByTestResultIdAsync(string in0, System.Nullable<bool> in1, System.Nullable<bool> in2, System.Nullable<int> in3, UserExtend in4, object userState) {
            if ((this.getQuestionCorrectFlagByTestResultIdOperationCompleted == null)) {
                this.getQuestionCorrectFlagByTestResultIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuestionCorrectFlagByTestResultIdOperationCompleted);
            }
            this.InvokeAsync("getQuestionCorrectFlagByTestResultId", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4}, this.getQuestionCorrectFlagByTestResultIdOperationCompleted, userState);
        }
        
        private void OngetQuestionCorrectFlagByTestResultIdOperationCompleted(object arg) {
            if ((this.getQuestionCorrectFlagByTestResultIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuestionCorrectFlagByTestResultIdCompleted(this, new getQuestionCorrectFlagByTestResultIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string editTestResultQuestionScore([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in4, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in5, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in6) {
            object[] results = this.Invoke("editTestResultQuestionScore", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void editTestResultQuestionScoreAsync(string in0, string in1, string in2, string in3, string in4, string in5, UserExtend in6) {
            this.editTestResultQuestionScoreAsync(in0, in1, in2, in3, in4, in5, in6, null);
        }
        
        /// <remarks/>
        public void editTestResultQuestionScoreAsync(string in0, string in1, string in2, string in3, string in4, string in5, UserExtend in6, object userState) {
            if ((this.editTestResultQuestionScoreOperationCompleted == null)) {
                this.editTestResultQuestionScoreOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditTestResultQuestionScoreOperationCompleted);
            }
            this.InvokeAsync("editTestResultQuestionScore", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4,
                        in5,
                        in6}, this.editTestResultQuestionScoreOperationCompleted, userState);
        }
        
        private void OneditTestResultQuestionScoreOperationCompleted(object arg) {
            if ((this.editTestResultQuestionScoreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editTestResultQuestionScoreCompleted(this, new editTestResultQuestionScoreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")]
        public TestResultQuestionWrapper[] getTestResultQuestionList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> in3, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in4) {
            object[] results = this.Invoke("getTestResultQuestionList", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4});
            return ((TestResultQuestionWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void getTestResultQuestionListAsync(string in0, System.Nullable<bool> in1, System.Nullable<bool> in2, System.Nullable<int> in3, UserExtend in4) {
            this.getTestResultQuestionListAsync(in0, in1, in2, in3, in4, null);
        }
        
        /// <remarks/>
        public void getTestResultQuestionListAsync(string in0, System.Nullable<bool> in1, System.Nullable<bool> in2, System.Nullable<int> in3, UserExtend in4, object userState) {
            if ((this.getTestResultQuestionListOperationCompleted == null)) {
                this.getTestResultQuestionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTestResultQuestionListOperationCompleted);
            }
            this.InvokeAsync("getTestResultQuestionList", new object[] {
                        in0,
                        in1,
                        in2,
                        in3,
                        in4}, this.getTestResultQuestionListOperationCompleted, userState);
        }
        
        private void OngetTestResultQuestionListOperationCompleted(object arg) {
            if ((this.getTestResultQuestionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTestResultQuestionListCompleted(this, new getTestResultQuestionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TestResultWrapper saveTesterAnswersResult([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TestResultWrapper in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in2) {
            object[] results = this.Invoke("saveTesterAnswersResult", new object[] {
                        in0,
                        in1,
                        in2});
            return ((TestResultWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void saveTesterAnswersResultAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, UserExtend in2) {
            this.saveTesterAnswersResultAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void saveTesterAnswersResultAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, UserExtend in2, object userState) {
            if ((this.saveTesterAnswersResultOperationCompleted == null)) {
                this.saveTesterAnswersResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsaveTesterAnswersResultOperationCompleted);
            }
            this.InvokeAsync("saveTesterAnswersResult", new object[] {
                        in0,
                        in1,
                        in2}, this.saveTesterAnswersResultOperationCompleted, userState);
        }
        
        private void OnsaveTesterAnswersResultOperationCompleted(object arg) {
            if ((this.saveTesterAnswersResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.saveTesterAnswersResultCompleted(this, new saveTesterAnswersResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public System.Nullable<bool> updateTestResult([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in2) {
            object[] results = this.Invoke("updateTestResult", new object[] {
                        in0,
                        in1,
                        in2});
            return ((System.Nullable<bool>)(results[0]));
        }
        
        /// <remarks/>
        public void updateTestResultAsync(string in0, string in1, UserExtend in2) {
            this.updateTestResultAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void updateTestResultAsync(string in0, string in1, UserExtend in2, object userState) {
            if ((this.updateTestResultOperationCompleted == null)) {
                this.updateTestResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateTestResultOperationCompleted);
            }
            this.InvokeAsync("updateTestResult", new object[] {
                        in0,
                        in1,
                        in2}, this.updateTestResultOperationCompleted, userState);
        }
        
        private void OnupdateTestResultOperationCompleted(object arg) {
            if ((this.updateTestResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateTestResultCompleted(this, new updateTestResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")]
        public TestResultQuestionWrapper[] submitOnlineQuestions([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in2) {
            object[] results = this.Invoke("submitOnlineQuestions", new object[] {
                        in0,
                        in1,
                        in2});
            return ((TestResultQuestionWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void submitOnlineQuestionsAsync(TestResultQuestionWrapper[] in0, System.Nullable<bool> in1, UserExtend in2) {
            this.submitOnlineQuestionsAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void submitOnlineQuestionsAsync(TestResultQuestionWrapper[] in0, System.Nullable<bool> in1, UserExtend in2, object userState) {
            if ((this.submitOnlineQuestionsOperationCompleted == null)) {
                this.submitOnlineQuestionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitOnlineQuestionsOperationCompleted);
            }
            this.InvokeAsync("submitOnlineQuestions", new object[] {
                        in0,
                        in1,
                        in2}, this.submitOnlineQuestionsOperationCompleted, userState);
        }
        
        private void OnsubmitOnlineQuestionsOperationCompleted(object arg) {
            if ((this.submitOnlineQuestionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitOnlineQuestionsCompleted(this, new submitOnlineQuestionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TestResultWrapper submitOnlineImproveTestGrade([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TestResultWrapper in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in3) {
            object[] results = this.Invoke("submitOnlineImproveTestGrade", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((TestResultWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void submitOnlineImproveTestGradeAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, System.Nullable<bool> in2, UserExtend in3) {
            this.submitOnlineImproveTestGradeAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void submitOnlineImproveTestGradeAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, System.Nullable<bool> in2, UserExtend in3, object userState) {
            if ((this.submitOnlineImproveTestGradeOperationCompleted == null)) {
                this.submitOnlineImproveTestGradeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitOnlineImproveTestGradeOperationCompleted);
            }
            this.InvokeAsync("submitOnlineImproveTestGrade", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.submitOnlineImproveTestGradeOperationCompleted, userState);
        }
        
        private void OnsubmitOnlineImproveTestGradeOperationCompleted(object arg) {
            if ((this.submitOnlineImproveTestGradeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitOnlineImproveTestGradeCompleted(this, new submitOnlineImproveTestGradeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public System.Nullable<bool> cancelSaveTestResutl([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in1) {
            object[] results = this.Invoke("cancelSaveTestResutl", new object[] {
                        in0,
                        in1});
            return ((System.Nullable<bool>)(results[0]));
        }
        
        /// <remarks/>
        public void cancelSaveTestResutlAsync(string in0, UserExtend in1) {
            this.cancelSaveTestResutlAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void cancelSaveTestResutlAsync(string in0, UserExtend in1, object userState) {
            if ((this.cancelSaveTestResutlOperationCompleted == null)) {
                this.cancelSaveTestResutlOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelSaveTestResutlOperationCompleted);
            }
            this.InvokeAsync("cancelSaveTestResutl", new object[] {
                        in0,
                        in1}, this.cancelSaveTestResutlOperationCompleted, userState);
        }
        
        private void OncancelSaveTestResutlOperationCompleted(object arg) {
            if ((this.cancelSaveTestResutlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelSaveTestResutlCompleted(this, new cancelSaveTestResutlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute("out", IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")]
        public TestResultQuestionWrapper[] getQuestionCorrectFlag([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in0, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in1) {
            object[] results = this.Invoke("getQuestionCorrectFlag", new object[] {
                        in0,
                        in1});
            return ((TestResultQuestionWrapper[])(results[0]));
        }
        
        /// <remarks/>
        public void getQuestionCorrectFlagAsync(TestResultQuestionWrapper[] in0, UserExtend in1) {
            this.getQuestionCorrectFlagAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void getQuestionCorrectFlagAsync(TestResultQuestionWrapper[] in0, UserExtend in1, object userState) {
            if ((this.getQuestionCorrectFlagOperationCompleted == null)) {
                this.getQuestionCorrectFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuestionCorrectFlagOperationCompleted);
            }
            this.InvokeAsync("getQuestionCorrectFlag", new object[] {
                        in0,
                        in1}, this.getQuestionCorrectFlagOperationCompleted, userState);
        }
        
        private void OngetQuestionCorrectFlagOperationCompleted(object arg) {
            if ((this.getQuestionCorrectFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuestionCorrectFlagCompleted(this, new getQuestionCorrectFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public TestResultWrapper submitTesterAnswersResult([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TestResultWrapper in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in2) {
            object[] results = this.Invoke("submitTesterAnswersResult", new object[] {
                        in0,
                        in1,
                        in2});
            return ((TestResultWrapper)(results[0]));
        }
        
        /// <remarks/>
        public void submitTesterAnswersResultAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, UserExtend in2) {
            this.submitTesterAnswersResultAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void submitTesterAnswersResultAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, UserExtend in2, object userState) {
            if ((this.submitTesterAnswersResultOperationCompleted == null)) {
                this.submitTesterAnswersResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitTesterAnswersResultOperationCompleted);
            }
            this.InvokeAsync("submitTesterAnswersResult", new object[] {
                        in0,
                        in1,
                        in2}, this.submitTesterAnswersResultOperationCompleted, userState);
        }
        
        private void OnsubmitTesterAnswersResultOperationCompleted(object arg) {
            if ((this.submitTesterAnswersResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitTesterAnswersResultCompleted(this, new submitTesterAnswersResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://webservice.acepherics.com", ResponseNamespace="http://webservice.acepherics.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("out", IsNullable=true)]
        public string submitOnlineTest([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] TestResultWrapper in0, [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://wrapper.webservice.acepherics.com")] TestResultQuestionWrapper[] in1, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<bool> in2, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] UserExtend in3) {
            object[] results = this.Invoke("submitOnlineTest", new object[] {
                        in0,
                        in1,
                        in2,
                        in3});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void submitOnlineTestAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, System.Nullable<bool> in2, UserExtend in3) {
            this.submitOnlineTestAsync(in0, in1, in2, in3, null);
        }
        
        /// <remarks/>
        public void submitOnlineTestAsync(TestResultWrapper in0, TestResultQuestionWrapper[] in1, System.Nullable<bool> in2, UserExtend in3, object userState) {
            if ((this.submitOnlineTestOperationCompleted == null)) {
                this.submitOnlineTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubmitOnlineTestOperationCompleted);
            }
            this.InvokeAsync("submitOnlineTest", new object[] {
                        in0,
                        in1,
                        in2,
                        in3}, this.submitOnlineTestOperationCompleted, userState);
        }
        
        private void OnsubmitOnlineTestOperationCompleted(object arg) {
            if ((this.submitOnlineTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.submitOnlineTestCompleted(this, new submitOnlineTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://domain.acepherics.com")]
    public partial class UserExtend {
        
        private System.Nullable<int> adminRoleField;
        
        private bool adminRoleFieldSpecified;
        
        private string bookIdField;
        
        private string courseIdField;
        
        private string identityIdField;
        
        private string instituteIdField;
        
        private string isbnField;
        
        private System.Nullable<int> loginStateField;
        
        private bool loginStateFieldSpecified;
        
        private string pointingBookIdField;
        
        private string pointingIsbnField;
        
        private string roleIdField;
        
        private string sectionIdField;
        
        private System.Nullable<int> studyFlagField;
        
        private bool studyFlagFieldSpecified;
        
        private string systemIdField;
        
        private string userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> adminRole {
            get {
                return this.adminRoleField;
            }
            set {
                this.adminRoleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool adminRoleSpecified {
            get {
                return this.adminRoleFieldSpecified;
            }
            set {
                this.adminRoleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string bookId {
            get {
                return this.bookIdField;
            }
            set {
                this.bookIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string courseId {
            get {
                return this.courseIdField;
            }
            set {
                this.courseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string identityId {
            get {
                return this.identityIdField;
            }
            set {
                this.identityIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string instituteId {
            get {
                return this.instituteIdField;
            }
            set {
                this.instituteIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string isbn {
            get {
                return this.isbnField;
            }
            set {
                this.isbnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> loginState {
            get {
                return this.loginStateField;
            }
            set {
                this.loginStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool loginStateSpecified {
            get {
                return this.loginStateFieldSpecified;
            }
            set {
                this.loginStateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pointingBookId {
            get {
                return this.pointingBookIdField;
            }
            set {
                this.pointingBookIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pointingIsbn {
            get {
                return this.pointingIsbnField;
            }
            set {
                this.pointingIsbnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string roleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sectionId {
            get {
                return this.sectionIdField;
            }
            set {
                this.sectionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> studyFlag {
            get {
                return this.studyFlagField;
            }
            set {
                this.studyFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool studyFlagSpecified {
            get {
                return this.studyFlagFieldSpecified;
            }
            set {
                this.studyFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string systemId {
            get {
                return this.systemIdField;
            }
            set {
                this.systemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wrapper.webservice.acepherics.com")]
    public partial class TestResultQuestionWrapper {
        
        private string tScoreField;
        
        private string correctFlagField;
        
        private string idField;
        
        private string improveNumField;
        
        private string independenceField;
        
        private string pointingLoIdField;
        
        private string qpvSeedIdField;
        
        private string questionIdField;
        
        private string scoreField;
        
        private string sectionIdField;
        
        private string systemIdField;
        
        private string testIdField;
        
        private string testerAnswersContentField;
        
        private string userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TScore {
            get {
                return this.tScoreField;
            }
            set {
                this.tScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string correctFlag {
            get {
                return this.correctFlagField;
            }
            set {
                this.correctFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string improveNum {
            get {
                return this.improveNumField;
            }
            set {
                this.improveNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string independence {
            get {
                return this.independenceField;
            }
            set {
                this.independenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string pointingLoId {
            get {
                return this.pointingLoIdField;
            }
            set {
                this.pointingLoIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string qpvSeedId {
            get {
                return this.qpvSeedIdField;
            }
            set {
                this.qpvSeedIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string questionId {
            get {
                return this.questionIdField;
            }
            set {
                this.questionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sectionId {
            get {
                return this.sectionIdField;
            }
            set {
                this.sectionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string systemId {
            get {
                return this.systemIdField;
            }
            set {
                this.systemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string testId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string testerAnswersContent {
            get {
                return this.testerAnswersContentField;
            }
            set {
                this.testerAnswersContentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wrapper.webservice.acepherics.com")]
    public partial class TestResultWrapper {
        
        private string adjustScoreField;
        
        private string answeredBaseField;
        
        private string assignmentContentIdField;
        
        private string assignmentIdField;
        
        private string attemptNumberField;
        
        private System.Nullable<bool> cheatFlagField;
        
        private bool cheatFlagFieldSpecified;
        
        private string idField;
        
        private string improveHistoryField;
        
        private string improveNumField;
        
        private string improveScoreFlagField;
        
        private string improveTotalScoreField;
        
        private string improveTypeField;
        
        private string improvedScoreField;
        
        private string kpScoreField;
        
        private string roleIdField;
        
        private string scoreFlagField;
        
        private string sectionIdField;
        
        private string statusFlagField;
        
        private string submissionTypeField;
        
        private string submittedDateField;
        
        private string systemIdField;
        
        private string testIdField;
        
        private string totalScoreField;
        
        private string typeField;
        
        private string useTimeField;
        
        private string userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string adjustScore {
            get {
                return this.adjustScoreField;
            }
            set {
                this.adjustScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string answeredBase {
            get {
                return this.answeredBaseField;
            }
            set {
                this.answeredBaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string assignmentContentId {
            get {
                return this.assignmentContentIdField;
            }
            set {
                this.assignmentContentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string assignmentId {
            get {
                return this.assignmentIdField;
            }
            set {
                this.assignmentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string attemptNumber {
            get {
                return this.attemptNumberField;
            }
            set {
                this.attemptNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> cheatFlag {
            get {
                return this.cheatFlagField;
            }
            set {
                this.cheatFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool cheatFlagSpecified {
            get {
                return this.cheatFlagFieldSpecified;
            }
            set {
                this.cheatFlagFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string improveHistory {
            get {
                return this.improveHistoryField;
            }
            set {
                this.improveHistoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string improveNum {
            get {
                return this.improveNumField;
            }
            set {
                this.improveNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string improveScoreFlag {
            get {
                return this.improveScoreFlagField;
            }
            set {
                this.improveScoreFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string improveTotalScore {
            get {
                return this.improveTotalScoreField;
            }
            set {
                this.improveTotalScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string improveType {
            get {
                return this.improveTypeField;
            }
            set {
                this.improveTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string improvedScore {
            get {
                return this.improvedScoreField;
            }
            set {
                this.improvedScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string kpScore {
            get {
                return this.kpScoreField;
            }
            set {
                this.kpScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string roleId {
            get {
                return this.roleIdField;
            }
            set {
                this.roleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string scoreFlag {
            get {
                return this.scoreFlagField;
            }
            set {
                this.scoreFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string sectionId {
            get {
                return this.sectionIdField;
            }
            set {
                this.sectionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string statusFlag {
            get {
                return this.statusFlagField;
            }
            set {
                this.statusFlagField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string submissionType {
            get {
                return this.submissionTypeField;
            }
            set {
                this.submissionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string submittedDate {
            get {
                return this.submittedDateField;
            }
            set {
                this.submittedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string systemId {
            get {
                return this.systemIdField;
            }
            set {
                this.systemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string testId {
            get {
                return this.testIdField;
            }
            set {
                this.testIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string totalScore {
            get {
                return this.totalScoreField;
            }
            set {
                this.totalScoreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string useTime {
            get {
                return this.useTimeField;
            }
            set {
                this.useTimeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string userId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getCorreceNumByTestResultCompletedEventHandler(object sender, getCorreceNumByTestResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCorreceNumByTestResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCorreceNumByTestResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void submitOnlineImproveTestCompletedEventHandler(object sender, submitOnlineImproveTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitOnlineImproveTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitOnlineImproveTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void submitOnlineTestGradeCompletedEventHandler(object sender, submitOnlineTestGradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitOnlineTestGradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitOnlineTestGradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void submitOfflineQuestionsCompletedEventHandler(object sender, submitOfflineQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitOfflineQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitOfflineQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultQuestionWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultQuestionWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getQuestionCorrectFlagByTestResultIdCompletedEventHandler(object sender, getQuestionCorrectFlagByTestResultIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuestionCorrectFlagByTestResultIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuestionCorrectFlagByTestResultIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultQuestionWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultQuestionWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void editTestResultQuestionScoreCompletedEventHandler(object sender, editTestResultQuestionScoreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editTestResultQuestionScoreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editTestResultQuestionScoreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getTestResultQuestionListCompletedEventHandler(object sender, getTestResultQuestionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTestResultQuestionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTestResultQuestionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultQuestionWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultQuestionWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void saveTesterAnswersResultCompletedEventHandler(object sender, saveTesterAnswersResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class saveTesterAnswersResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal saveTesterAnswersResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void updateTestResultCompletedEventHandler(object sender, updateTestResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateTestResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateTestResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void submitOnlineQuestionsCompletedEventHandler(object sender, submitOnlineQuestionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitOnlineQuestionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitOnlineQuestionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultQuestionWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultQuestionWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void submitOnlineImproveTestGradeCompletedEventHandler(object sender, submitOnlineImproveTestGradeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitOnlineImproveTestGradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitOnlineImproveTestGradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void cancelSaveTestResutlCompletedEventHandler(object sender, cancelSaveTestResutlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelSaveTestResutlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelSaveTestResutlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Nullable<bool> Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Nullable<bool>)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getQuestionCorrectFlagCompletedEventHandler(object sender, getQuestionCorrectFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuestionCorrectFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuestionCorrectFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultQuestionWrapper[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultQuestionWrapper[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void submitTesterAnswersResultCompletedEventHandler(object sender, submitTesterAnswersResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitTesterAnswersResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitTesterAnswersResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TestResultWrapper Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TestResultWrapper)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void submitOnlineTestCompletedEventHandler(object sender, submitOnlineTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class submitOnlineTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal submitOnlineTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591